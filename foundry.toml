[profile.default]
src = 'contracts'
out = 'out'
test = 'test'
libs = ['node_modules', 'lib']
script = 'scripts'
cache_path = 'cache-forge'
gas_reports = ["*"]
via_ir = true
sizes = true
optimizer = true
optimizer_runs=1000
solc_version = '0.8.19'
ffi = true
fs_permissions = [{ access = "read-write", path = "./scripts/selectors.json"}, { access = "read-write", path = "./scripts/vanity.json"}]
memory_limit = 1000043554432

[fuzz]
runs = 10000

[invariant]
runs = 1000
depth = 30

[rpc_endpoints]
arbitrum = "${ETH_NODE_URI_ARBITRUM}"
gnosis = "${ETH_NODE_URI_GNOSIS}"
mainnet = "${ETH_NODE_URI_MAINNET}"
optimism = "${ETH_NODE_URI_OPTIMISM}"
polygon = "${ETH_NODE_URI_POLYGON}"
fork = "${ETH_NODE_URI_FORK}"

[etherscan]
arbitrum = { key = "${ARBITRUM_ETHERSCAN_API_KEY}" }
gnosis = { key = "${GNOSIS_ETHERSCAN_API_KEY}" , url = "https://api.gnosisscan.io/api"}
mainnet = { key = "${MAINNET_ETHERSCAN_API_KEY}" }
optimism = { key = "${OPTIMISM_ETHERSCAN_API_KEY}" }
polygon = { key = "${POLYGON_ETHERSCAN_API_KEY}" }

[profile.dev]
optimizer = true
via_ir = false
src = 'test'
gas_reports = ["*"]

[profile.dev.fuzz]
runs = 2000

[profile.dev.invariant]
runs = 10
depth = 1
fail_on_revert = false

[profile.ci]
src = 'test'
via_ir = false
gas_reports = ["*"]

[profile.ci.fuzz]
runs = 100

[profile.ci.invariant]
runs = 10
depth = 30
fail_on_revert = false
